
# defmodule Conv do
# 	defstruct method: method,
# 					  path: path,
# 						params: params ,
# 						headers: headers,
# 						status: nil
# end
defmodule Recurse do
	def parse(request) do
		[top, params_string] = String.split(request, "\n\n")

		[request_line | header_lines] = String.split(top, "\n")

		[method, path, _ ] = String.split(request_line, " ")

		headers = parse_headers(header_lines, %{})

		parse_params(headers["Content-Type"],params_string)


		%{ method: method, path: path}
	end

	def parse_params("application/x-www-form-urlencoded", params_string) do
		params_string |> String.trim |> URI.decode_query

		IO.inspect "the params_string: #{params_string}"
	end

	def parse_params(_,_),  do: %{}

	def parse_headers([h|t], headers) do

		[key, value] = String.split(h, ": ")

		headers = Map.put(headers, key, value)

		IO.inspect headers

	  parse_headers(t, headers)

	end


	def parse_headers([], headers), do: headers
end

request = """
POST /bears HTTP/1.1
Host: example.com
User-Agent: ExamplesBrowser/1.0
Accept: */*
Content-Type: application/x-www-form-urlencoded
Content-Length: 21

name=Baloo&type=Brown
"""

Recurse.parse(request)
#response = Recurse.loopy(request)

#IO.puts response
